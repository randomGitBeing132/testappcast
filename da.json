{
    "x-generator": "NSwag v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))",
    "openapi": "3.1.1",
    "info": {
        "title": "GSM API - Aigens",
        "description": "This API is designed for vendor integrations, enabling secure access to GSM platform functionality. All endpoints require Bearer token authorization.",
        "version": "1"
    },
    "servers": [
        {
            "url": "http://localhost:5091"
        }
    ],
    "paths": {
        "/aigens/api/v1/notification/push": {
            "post": {
                "tags": [
                    "Notification"
                ],
                "summary": "Send push notification",
                "description": "Sends a push notification to a device via Firebase Cloud Messaging. Used for delivering promotional messages to users.",
                "operationId": "ApiFeaturesAigensNotificationsPushNotificationsPushNotificationsEndpoint",
                "parameters": [
                    {
                        "type": "string",
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "description": "Bearer token. Format: 'Bearer {token}'"
                    }
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "PushNotificationsRequest",
                        "description": "",
                        "required": true,
                        "schema": {
                          "$ref": "#/components/schemas/PushNotificationsRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "AigensBearerToken": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "PushNotificationsRequest": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The title text displayed in the push notification.",
                        "maxLength": 100,
                        "minLength": 0,
                        "nullable": false,
                        "examples": [
                            "Genki PNS Title"
                        ]
                    },
                    "body": {
                        "type": "string",
                        "description": "The message content displayed in the push notification.",
                        "examples": [
                            "Genki PNS Body"
                        ]
                    },
                    "imageUrl": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "An optional image URL to be displayed with the notification. Image Url must start with https.",
                        "format": "uri",
                        "examples": [
                            "https://www.genkisushi.com.sg/wp-content/uploads/2018/07/Nigiri.png"
                        ]
                    },
                    "deviceTokens": {
                        "type": "array",
                        "description": "A list of FCM device tokens identifying the target devices for this push notification.",
                        "items": {
                            "type": "string"
                        },
                        "examples": [
                            [
                                "wUZCq7Ra0MeDUp0OwDnbSv9+8JFn1vJGKxFMC2vjw3A=",
                                "NL9Z9VavWyNH3Ug+VW2LrsvmnJ4MGzKj+vGsagSzO9s="
                            ]
                        ]
                    }
                },
                "examples": [
                    {
                        "title": "Genki PNS Title",
                        "body": "Genki PNS Body",
                        "imageUrl": "https://www.genkisushi.com.sg/wp-content/uploads/2018/07/Nigiri.png",
                        "deviceTokens": [
                            "wUZCq7Ra0MeDUp0OwDnbSv9+8JFn1vJGKxFMC2vjw3A=",
                            "NL9Z9VavWyNH3Ug+VW2LrsvmnJ4MGzKj+vGsagSzO9s="
                        ]
                    }
                ]
            },
            "ProblemDetails": {
                "type": "object",
                "description": "RFC7807 compatible problem details/ error response class. this can be used by configuring startup like so:\napp.UseFastEndpoints(c => c.Errors.UseProblemDetails())",
                "additionalProperties": false,
                "properties": {
                    "type": {
                        "type": "string",
                        "default": "https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1"
                    },
                    "title": {
                        "type": "string",
                        "default": "One or more validation errors occurred."
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "default": 400
                    },
                    "instance": {
                        "type": "string",
                        "default": "/api/route"
                    },
                    "traceId": {
                        "type": "string",
                        "default": "0HMPNHL0JHL76:00000001"
                    },
                    "detail": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "the details of the error"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails_Error"
                        }
                    }
                }
            },
            "ProblemDetails_Error": {
                "type": "object",
                "description": "the error details object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "the name of the error or property of the dto that caused the error",
                        "default": "Error or field name"
                    },
                    "reason": {
                        "type": "string",
                        "description": "the reason for the error",
                        "default": "Error reason"
                    },
                    "code": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "the code of the error"
                    },
                    "severity": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "the severity of the error"
                    }
                }
            }
        },
        "securitySchemes": {
            "JWTBearerAuth": {
                "type": "http",
                "description": "Enter a JWT token to authorize the requests...",
                "scheme": "Bearer",
                "bearerFormat": "JWT"
            },
            "AigensBearerToken": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}
